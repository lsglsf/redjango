"""
Django settings for Management project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7n27ukmro69%k5hs5$2zau2mgg*+djr3m*c57r+rxg$+b!cfwm'

allow_ip='192.168.2.57'

Automation_path=os.path.join(BASE_DIR,'Automation','ansible')
ANSABLE_CNF = os.path.join(BASE_DIR,'Automation','ansible','ansible.cfg')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'Cmdb',
    'service',
    'Automation',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'middleware.middleware.UserSessionMiddleware',
)

ROOT_URLCONF = 'Management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
       # 'DIRS': [os.path.join(BASE_DIR,'Management','templates')]
        'DIRS': [os.path.join(BASE_DIR,'templates')]
       # 'DIRS':[]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Management.wsgi.application'
LOG_BASE_DIR=os.path.join(BASE_DIR.rstrip("Management"), "log")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
        'complete': {
            'format': '[%(levelname)s %(asctime)s @ %(process)d] (%(pathname)s/%(funcName)s:%(lineno)d) - %(message)s'
        },
        'online': {
            'format': '[%(levelname)s %(asctime)s @ %(process)d] - %(message)s'
        }
    },
    'handlers': {
        'null': {
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'file': {
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'formatter': 'online',
            'filename' : '{0}/error.log'.format(LOG_BASE_DIR).replace('\\','/')
        },
        'Cmdb_log':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter':'complete',
            'filename': '{0}/cmdb_log.log'.format(LOG_BASE_DIR).replace('\\','/')
        },
        "connection":{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': '{0}/connection.log'.format(LOG_BASE_DIR).replace('\\', '/')
        },
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
            'formatter': 'complete'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        '': {
            'handlers':['file'],
            'propagate': False,
            'level':'DEBUG',
        },
        'cmd_log': {
            'handlers':[ 'console'],
            'propagate': False,
            'level':'DEBUG',
        },
        'access_log': {
            'handlers':[ 'console'],
            'propagate': False,
            'level':'DEBUG',
        },
        'Cmdb_log':{
          'handlers':['Cmdb_log'],
            'propagate':False,
            'level':'DEBUG',
        },
        'connection':{
            'handlers': ['connection'],
            'propagate': False,
            'level': 'DEBUG',
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
   # 'default': {
  #      'ENGINE': 'django.db.backends.sqlite3',
 #       'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
  #  }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cmdb',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '11',
        'PORT': 3306,
    }
}

ZABBIX={
    "default":{
        "URL":"http://1111/api_jsonrpc.php",
        "USER":"11",
        "PASSWORD":"11",
        "TIMEOUT":2
    }
}
MONGODB={
    "default":{
        'HOST' : '1',
        'PORT' : 1
    }
}

ZABBIX_TOKEN=''

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR,'static/')
#STATIC_ROOT = os.path.join(BASE_DIR,'static/').replace('\\','/')
#print STATIC_ROOT,STATIC_URL
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(BASE_DIR,'static').replace('\\','/'),
)